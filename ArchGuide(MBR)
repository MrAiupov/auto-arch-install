Подробная инструкция по установка Arch Linux (на диск с MBR разметкой)

Скачайте установочный образ ArchLinux
и запишите на USB накопитель
https://www.archlinux.org/download/

Загружаемся в установочную среду в виде командной строки, 
мы сразу имеем root доступ, никаких sudo писать не нужно 
во время установки, никогда. Все приведённые ниже команды 
начинаются со знака доллара, его писать тоже не нужно, 
это обозначение начала команды (из за того что некоторые команды длинные, 
и могут просто не поместиться на экран)

Сначала необходимо определить название WiFi интерфейса, для этого выполняем команду:
$ iwconfig

Затем воспользуемся утилитой wifi-menu:
$ wifi-menu имя_интерфейса

Но у некоторых работает, даже если просто ввести команду, без имени
то выходит список вай фай сетей, у многих по разному в общем
$ wifi-menu

Чтобы проверить соединение, попробуйте, работает ли ping:
$ ping -c 5 archlinux.org

Первичная настройка шрифтов, клавиатуры, времени
$ loadkeys ru
$ setfont cyr-sun16
$ timedatectl set-ntp true

Самым первым делом, мы смотрим наши диски, через команду
$ lsblk

если у вас все эти разделы уже имеются, то просто запоминаем 
в каких что будет, у нас будет примерно так:

sda1 - загрузчик windows
sda7 - root (будем форматировать)
sda6 - home (будем форматировать)
sda5 - swap (будем форматировать)
sdb1 - data
sdb2 - system

(а если таких разделов нет, то читаем вики Арча, по разметке диска)
https://wiki.archlinux.org/index.php/Installation_guide_(Русский)#Разметка_дисков
но нам этого не надо, у нас уже все разделы имеются (но обычно хватает лишь одного раздела для root)
так что возвращаемся обратно в наш мануал и идём дальше по пунктам

Перед монтированием разделов, нам надо пометить наш загрузчик windows, 
загрузочной меткой. Для этого откроем программу cfdisk с выбором нашего 
диска sda, вот такой командой
$ cfdisk /dev/sda
(далее выберем стрелками вверх и вниз раздел с загрузчиком windows, 
напомню что это sda1 и просто нажмём на клавиатуре на английском 
"клавишу B", и около данного раздела должна появится звёздочка в столбце Boot)

далее в самом внизу, выбираем пункт "Запись", нажимаем Enter, и вводим слово "yes"
после этого идём в пункт "Выйти" и нажимем Enter
ничего больше там не меняйте, если не знаете что делаете

ВСЁ, мы готовы к форматированию и монтированию наших разделов, 
напоминаю, что данное руководство именно к установке ArchLinux рядом с Windows 10. 
(ОБЯЗАТЕЛЬНО ВСЕ ИМЕНА ДИСКОВ И РАЗДЕЛОВ ПИШЕМ С МАЛЕНЬКОЙ БУКВЫ.)

Форматируем root раздел в ext4 формат и сразу монтируем
$ mkfs.ext4 /dev/sda7
$ mount /dev/sda7 /mnt

Форматируем home раздел в ext4 формат и сразу монтируем
$ mkfs.ext4 /dev/sda6
$ mkdir /mnt/home
$ mount /dev/sda6 /mnt/home

Форматируем раздел swap и монтируем
$ mkswap /dev/sda5
$ swapon /dev/sda5

Создаём общий boot раздел, и монтируем туда загрузчик windows
$ mkdir /mnt/boot
$ mount /dev/sda1 /mnt/boot

Создаём дополнительные разделы data и system (по желанию) и монтируем
$ mkdir /mnt/data
$ mkdir /mnt/system
$ mount /dev/sdb1 /mnt/data
$ mount /dev/sdb2 /mnt/system

Выбор зеркал для загрузки из России.
автоматический подбор пяти ближайших зеркал
$ reflector --verbose -l 5 -p https --sort rate --save /etc/pacman.d/mirrorlist

Но настоятельно рекоменду набирать вручную, хоть это и самое сложное в нашем инструкции,
потом всё будет легче. (просьба обратить внимание, что лишь в первой строчке одна стрелка вправо, 
это создание нового файла, с данной строчкой, во всех других две стрелки вправо, 
это добавление новых строк уже в наш существующий файл), 
чтобы не набирать все данные команды заново, просто введите первую, 
а потом дублируйте их, изменяя начало ссылки, последняя ссылка немного другая по структуре, 
не ошибитесь. Если ввести неправильно, то не получится установить ArchLinux.

$ echo "Server = http://mirror.yandex.ru/archlinux/\$repo/os/\$arch" > /etc/pacman.d/mirrorlist
$ echo "Server = https://mirror.yandex.ru/archlinux/\$repo/os/\$arch" >> /etc/pacman.d/mirrorlist
$ echo "Server = http://mirror.truenetwork.ru/archlinux/\$repo/os/\$arch" >> /etc/pacman.d/mirrorlist
$ echo "Server = http://mirror.rol.ru/archlinux/\$repo/os/\$arch" >> /etc/pacman.d/mirrorlist
$ echo "Server = https://mirror.rol.ru/archlinux/\$repo/os/\$arch" >> /etc/pacman.d/mirrorlist
$ echo "Server = http://archlinux.zepto.cloud/\$repo/os/\$arch" >> /etc/pacman.d/mirrorlist

Установка основных пакетов
$ pacstrap /mnt base base-devel linux linux-firmware nano dhcpcd netctl

Настройка системы
$ genfstab -pU /mnt >> /mnt/etc/fstab
$ arch-chroot /mnt

И вот мы попадаем в наш ArchLinux, но он ещё до конца не установлен, и нет загрузчика

Прописываем имя компьютера
$ echo "имя_компьютера" > /etc/hostname

Добавляем пользователя
$ useradd -m -g users -G wheel -s /bin/bash имя_пользователя

Создаем root пароль
$ passwd

Создаём пароль пользователя
$ passwd имя_пользователя

Прописываем часовой пояс
(если не знаешь как правильно пишется твоя таймзона, допиши всю команду 
до слова zoneinfo и нажми кнопку Tab и выйдет подсказка, и смотря на подсказку, 
допиши всю команду целиком, у меня например Екатеринбург)
$ ln -svf /usr/share/zoneinfo/Asia/Yekaterinburg /etc/localtime

Добавляем русскую локаль системы
$ echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
$ echo "ru_RU.UTF-8 UTF-8" >> /etc/locale.gen 

Обновим текущую локаль системы'
$ locale-gen

Указываем язык системы
(просьба обратить внимание на кавычки, тут присутствуют ещё и одинарные, 
чаще всего она в английской раскладке, на той же клавише где и обычные кавычки)
$ echo 'LANG="ru_RU.UTF-8"' > /etc/locale.conf

Вписываем шрифт системы и раскладку (стандартный шрифт ужасен, 
поэтому ставим данный шрифт который приятен глазу)
$ echo 'KEYMAP=ru' >> /etc/vconsole.conf
$ echo 'FONT=cyr-sun16' >> /etc/vconsole.conf

Создаём загрузочный RAM диск
$ mkinitcpio -p linux

Устанавливаем загрузчик (обязательно)
$ pacman -Syy
$ pacman -S grub --noconfirm 
$ grub-install /dev/sda
(именно sda, полностью весь диск, на котором у нас система, а не какой то один раздел, 
именно так и ставят на MBR, а вот с GPT будет по другому, там уже нужно создавать 
отдельный раздел для загрузчика, но это к нам не относится)

Обновляем grub.cfg
$ grub-mkconfig -o /boot/grub/grub.cfg

Ставим программу для Wi-fi
$ pacman -S dialog wpa_supplicant broadcom-wl --noconfirm 

Устанавливаем SUDO (обращаем внимание на кавычки)
$ echo '%wheel ALL=(ALL) ALL' >> /etc/sudoers

Раскомментируем репозиторий multilib для работы 32-битных приложений в 64-битной системе, 
в нашем случае мы просто добавим новые строчки 
(обращаем внимание на кавычки и квадратные скобки)
$ echo '[multilib]' >> /etc/pacman.conf
$ echo 'Include = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf
$ pacman -Syy
(если не появился мультилиб в списке репозиториев, значит ввёл команду неправильно)

Ставим иксы и драйвера
$ pacman -S xorg-server xorg-drivers xorg-xinit

Если мы на виртуальной машине, то дополнительно нужно установить ещё и это. 
Но если ставим на реальное железо, то это не нужно по идее.
$ pacman -S virtualbox-guest-utils

Cтавим SDDM (но можно и любой другой, но рекомендую именно этот,
он очень хорошо дружит с KDE Plasma, советую именно его)
$ pacman -S sddm sddm-kcm --noconfirm

Ставим шрифты, которые сто процентов понадобятся 
(там значки и иероглифы, которые могут не отображаться если не установлены)
$ pacman -S ttf-liberation ttf-dejavu wqy-zenhei --noconfirm 

Ставим сеть
$ pacman -S networkmanager network-manager-applet ppp --noconfirm

Поддержка разделов с ntfs форматированием
$ pacman -S ntfs-3g ufw --noconfirm

Видеодрайвера Nvidea (если кому надо, по желанию)
$ pacman -S nvidia vulkan-tools vulkan-icd-loader 
lib32-nvidia-utils lib32-vulkan-icd-loader --noconfirm

Установка аудиодрайверов (обязательно)
$ pacman -S alsa-lib alsa-utils lib32-alsa-plugins lib32-curl --noconfirm

Установить супер минимальный набор рабочего стола Plasma, регулятор громкости, 
консоль и управление питанием, разрешение экрана
$ sudo pacman -S plasma-desktop plasma-pa konsole powerdevil kscreen

Установка программ, которые обязательно нужны
$ pacman -S dolphin ark spectacle kcalc okular gnome-disk-utility gparted 
gwenview guvcview kde-gtk-config user-manager screenfetch chromium --noconfirm

Установка Wine (по желанию)
$ pacman -S wine wine-gecko wine-mono multilib-devel --noconfirm

Установка Steam и Lutris (по желанию)
$ pacman -S steam lib32-alsa-plugins lib32-curl lutris --noconfirm

Ставим дополнительные программы (по желанию)
$ pacman -S firefox firefox-i18n-ru opera opera-ffmpeg-codecs vlc elisa 
gimp krita kdenlive libreoffice libreoffice-fresh-ru obs-studio audacity 
qbittorrent inkscape handbrake --noconfirm

Подключаем автозагрузку менеджера входа и интернет
$ systemctl enable sddm
$ systemctl enable NetworkManager

можно перезагружаться
$ reboot

(при первом запуске, grub может не увидеть Windows, 
не стоит пугаться, мы обновим список grub ещё раз, чуть позже, если он случайно пропал)

Также не стоит пугаться отвратительного менеджера входа SDDM, 
мы изменим его внешний вид на красивый чуть позже.

Также иногда Plasma, именно при первом запуске, запускает абсолютно пустой экран,
так как установщик минимальный, то просто клацаем правой кнопной мыши 
на пустой рабочий стол, и нажимаем добавить Панель, Стандартная панель.

Что обязательно нужно сделать при первом запуске, 
это открыть консоль, обращаем внимание что теперь root прав 
по дефолту уже нет, и иногда нужно писать sudo перед командой

и запоминаем нашу первую команду, которая нужна будет практически каждый день
Обновление системы
$ sudo pacman -Suy

Чистка кэша, это делать часто не нужно, но можно раз в месяц чистить систему от старого кэша
$ sudo pacman -Sсс

Все существующие пакеты для установки в Арче, можно найти по адресу
https://www.archlinux.org/packages/
и сразу читать их описание и ссылка на их сайты

либо для поиска можно воспользоваться командой pacman (с маленькой английской s)
$ sudo pacman -s имя_пакета

Любой пакет устанавливает очень просто, через консоль, 
просьба не использовать никогда никакие графические установщики?
а пользоваться только консолью.
Просто вводим команду
$ sudo pacman -S имя_пакета

Сразу надо запомнить, как правильно удалять установленную программу, 
чтобы она сразу забрала с собой все свои зависимости, 
которые использовала, но другим программам они точно уже не нужны
$ sudo pacman -Rs имя_пакета

Также можно установить пакет из файла
$ sudo pacman -U /путь_к_файлу/файл.tar.xz

или по сети
$ sudo pacman -U http://www.example.com/repo/example.pkg.tar.xz

Установка virtualbox (по желанию), пишу про него, потому что есть нюанс в установке
$ sudo pacman -S virtualbox virtualbox-host-modules-arch
(если будет спрашивать, какой пакет ставить, выбрать virtualbox-host-modules-arch)
а не dkms какой нибудь, и далее включаем ядро виртуалки (без этого она не заработает)
$ sudo /usr/bin/rcvboxdrv

ЭТО НЕ ОБЯЗАТЕЛЬНО, НО МОЖНО ВКЛЮЧИТЬ УСТАНОВКУ ПРОГРАММ ИЗ AUR 
(это сборки программ от сообщества Арча, не имеющих отношение к самой системе
просто какие то энтузиасты, делают сборки программ, которых нет в основной ветке,
там гарантии безопасности очень слабые, поэтому
использовать лишь для установки программ от очень проверенных источников, 
например snap устанавливается исключительно из AUR). 
Чтобы включить данный репозиторий, открываем консоль и сразу пишем
$ sudo pacman -Syu
$ mkdir -p /tmp/yay_install
$ cd /tmp/yay_install
$ sudo pacman -S git
$ git clone https://aur.archlinux.org/yay.git
$ cd yay
$ makepkg -sir --needed --noconfirm --skippgpcheck
$ cd ..
$ cd ..
$ rm -rf yay_install
$ cd ..
$ reboot

После этого можно установить поддержу Snap пакетов, по их инстуркции
https://snapcraft.io/docs/installing-snap-on-arch-linux

А вообще, сами пакеты AUR можно искать здесь
https://aur.archlinux.org/

устанавливать пакеты AUR легко, примерно также же как и через pacman
просто заменем pacman, на yay
(и обращаем внимание, что тут не надо вводить sudo)
$ yay -S имя_пакета

Обновлять пакеты AUR, можно также как и Pacman 
удобной командой двойного назначения
(которая сразу обновит пакеты Арча из пакмана, AUR из AUR)
$ yay -Suy

Вернёмся к GRUB (если в нём не виден windows), 
для автоматического обнаружения ОС отличных от Linux установите пакет os-prober. 
Если после установки пакета os-prober автоматическое обнаружение не работает 
должным образом, то может потребоваться установка пакета hwinfo.
$ sudo pacman -S os-prober
$ sudo os-prober

Обычно простого os-prober хватает, чтобы обнаружить все установленные операционные системы.

После этого также советую установить настройщик GRUB
$ sudo pacman -S grub-customizer

запускаем его через меню Пуск, он так и называется Grub Customizer 
и видим после этого меню, которое можно редактировать. 
Редактировать только на свой страх и риск.
(я всё удалил, кроме двух пунктов Arch и Windows 10)

КАКИЕ НАСТРОЙКИ нужно сделать после всех манипуляций. 
Нажимаем правой кнопкой на Пуск, и выбираем Взаимозаменяемые виджеты.
Выбираем классическое меню.

Нажимаем правой кнопкой на самой панели Пуск, на пустом месте, и выбираем Взаимозаменяемые виджеты.
Выбираем Панель задач (только значки).

Удаляем все виджеты слева, которые рядом с кнопкой Пуск.
И закрепляем туда лишь свои значки программ.
Надо просто запустить программу, и нажать правой кнопкой, Закрепить.

Не забываем перезагрузиться после этого, есть старый баг, где остаётся линия.

После этого нажимаем кнопку Пуск, Настройки системы.
И ОБЯЗАТЕЛЬНО по порядко идём по всем пунктам.
Из тех что я рекомендую менять.
-- Оформление среды Breeze темный вариант (Применить)
-- Оформление стола Breeze темный вариант (Применить)
-- Оформление приложение, нажимаем пункт справа внизу Настройки оформлений Gnome/GTK, 
потом опять внизу справа, Загрузить новые оформления, и там ищем Breeze-Darker, загружаем, 
и выставляем их, в строках Стиль программ для GTK2 и для GTK3
-- Поведение рабочей среды, выставляем двойной клик (Применить)
-- Блокировка экрана, я вырубил, но можно выставить своё время
-- Запуск и завершение, и в первом же пункте, выбираем для менеджера входа SDDM оформление Breeze и нажимаем Применить
-- Локализация (выставляем русский в самый вверх списка)
-- Дата и время (проверяем правильность)
-- Устройство ввода (выставляем раскладку и клавиши)
-- Экран, можно включить ночную цветовую схему
-- Управление питанием (выставляем своё время)

Если сбивается время, при переходе из виндовс в линукс, или наоборот.
то просто вбей в консоли команду, чтобы по дефолту было аппаратное время везде.
(уже и не помню, нужно sudo или нет, вроде нужно)
$ sudo timedatectl set-local-rtc 1
$ sudo timedatectl

Телеграм устанавливай исключительно из его официального сайта
https://desktop.telegram.org/
просто скачиваешь архив под линукс, и разархивируешь в какую нибудь свою папку для программ
запускаешь в первый раз и прикрепляешь к панели, и всё, она всегда готова к запуску с панели.

ВК Мессенджер тоже рекомендую устанавливать только из официального сайта
https://vk.com/landings/desktop_messenger
просто скачиваешь архив под линукс, и разархивируешь в какую нибудь свою папку для программ
запускаешь в первый раз и прикрепляешь к панели, и всё, она всегда готова к запуску с панели.

Вроде это все рекомендации, которые я вспомнил.
По возможности добавлю ещё.
